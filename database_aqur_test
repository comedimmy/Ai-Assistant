import mysql.connector

def get_db_connection():
    db_config = {
        "host": "localhost",
        "user": "root",
        "password": "Zx0920520",
        "database": "aqur"
    }
    return mysql.connector.connect(**db_config)

def save_user_google(google_user_id,user_name, user_email, login_type="Google"):
    """將使用者資料儲存到資料庫，若使用者已存在則更新 LastLoginTime"""
    conn = get_db_connection()
    cursor = conn.cursor()

    try:
        # 1. 先檢查使用者是否存在
        cursor.execute("SELECT UserID FROM users WHERE Email = %s", (user_email,))
        user = cursor.fetchone()

        if user:
            # 2. 若使用者存在，則更新 LastLoginTime
            cursor.execute("""
                UPDATE users 
                SET LastLoginTime = NOW() 
                WHERE Email = %s
            """, (user_email,))
            print(f"User {user_name} already exists, updated LastLoginTime.")
        else:
            # 3. 若使用者不存在，則插入新資料
            cursor.execute("""
                INSERT INTO users (userID,UserName, Email, LoginType, LastLoginTime)
                VALUES (%s,%s, %s, %s, NOW())
            """, (google_user_id,user_name, user_email, login_type))
            print(f"Inserted new user {user_name}.")

        conn.commit()
        return cursor.lastrowid  # 返回新插入或更新的使用者 ID
    except Exception as e:
        print("Database error:", str(e))
        return None
    finally:
        cursor.close()
        conn.close()

def get_user_by_name(user_name):
    """根據使用者名稱查詢使用者資料"""
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)  # 使用 dictionary 模式返回資料

    try:
        cursor.execute("SELECT * FROM users WHERE UserName = %s", (user_name,))
        user_data = cursor.fetchone()
        return user_data
    except Exception as e:
        print("Database error:", str(e))
        return None
    finally:
        cursor.close()
        conn.close()

def get_user_by_google_id(google_user_id):
    """透過 Google userID 查找使用者"""
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)

    cursor.execute("SELECT * FROM users WHERE userID = %s", (google_user_id,))
    user = cursor.fetchone()

    cursor.close()
    conn.close()
    return user

def update_user_name(old_name, new_name):
    """更新使用者名稱"""
    conn = get_db_connection()
    cursor = conn.cursor()

    try:
        # 更新名稱
        cursor.execute("""
            UPDATE users 
            SET UserName = %s 
            WHERE UserName = %s
        """, (new_name, old_name))
        
        conn.commit()
        return cursor.rowcount > 0  # 若更新成功則回傳 True
    except Exception as e:
        print("Database error:", str(e))
        return False
    finally:
        cursor.close()
        conn.close()

def save_photo_url(aquarium_id, photo_url):
    conn = get_db_connection()
    cursor = conn.cursor()

    try:
        # 將圖片URL儲存到資料庫
        cursor.execute("""
            INSERT INTO photo (AquariumID, URL)
            VALUES (%s, %s)
        """, (aquarium_id, photo_url))
        conn.commit()

        print(f"Photo URL for AquariumID {aquarium_id} saved successfully.")
    except Exception as e:
        print("Database error:", str(e))
    finally:
        cursor.close()
        conn.close()
